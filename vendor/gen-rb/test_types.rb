#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class SimpleStruct
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGE = 1

  FIELDS = {
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field message is unset!') unless @message
  end

  ::Thrift::Struct.generate_accessors self
end

class SimpleUnion < ::Thrift::Union
  include ::Thrift::Struct_Union
  class << self
    def foo(val)
      SimpleUnion.new(:foo, val)
    end

    def bar(val)
      SimpleUnion.new(:bar, val)
    end
  end

  FOO = 1
  BAR = 2

  FIELDS = {
    FOO => {:type => ::Thrift::Types::STRING, :name => 'foo'},
    BAR => {:type => ::Thrift::Types::STRING, :name => 'bar'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
  end

  ::Thrift::Union.generate_accessors self
end

